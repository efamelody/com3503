#version 330 core

layout (location = 0) in vec3 aPos;       // Vertex position
layout (location = 1) in vec3 aNormal;    // Vertex normal
layout (location = 2) in vec2 aTexCoord;  // Vertex texture coordinate

out vec3 FragPos;  // Position to pass to fragment shader
out vec3 Normal;   // Normal to pass to fragment shader
out vec2 TexCoord; // Texture coordinates to pass to fragment shader

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main() {
    FragPos = vec3(model * vec4(aPos, 1.0));  // Transform the position to world space
    Normal = mat3(transpose(inverse(model))) * aNormal;  // Transform normal to world space
    TexCoord = aTexCoord;  // Pass the texture coordinate directly
    gl_Position = projection * view * vec4(FragPos, 1.0);  // Final vertex position
}
